SET
foreign_key_checks = 0;

insert into `user` (name, is_admin, password, description)
value ('admin',true,'9C@e12sq','吾心吾行澄如明镜,所作所为皆属正义!');

insert into category(name)
values ('Mathematics'),
       ('Theoretical computer science'),
       ('Computer Systems'),
       ('Computer Programming & Applied Computer Science'),
       ('Artificial Intelligence'),
       ('Data Science');

insert into subcategory(category_id, name)
values (1,'Probability & Statistics'),
       (1,'Calculus'),
       (1,'Algebra'),
       (1,'Discrete Mathematics'),
       (2,'Computational Science'),
       (2,'Theory of Computation'),
       (2,'Data Structures'),
       (2,'Algorithm Design & Analysis'),
       (2,'Programming Language Theory'),
       (2,'Compilers'),
       (3,'Computer Architecture & Organization'),
       (3,'Operating Systems'),
       (3,'Parallel Computing'),
       (3,'Distributed Systems'),
       (3,'Computer Networks'),
       (3,'Computer Security & Cryptography'),
       (3,'Databases'),
       (4,'Programming Basics'),
       (4,'Systems Programming'),
       (4,'Software Engineering'),
       (4,'Software Development'),
       (4,'Computer Graphics'),
       (5,'Artificial Intelligence'),
       (5,'Deep Learning'),
       (5,'Machine Learning'),
       (5,'Natural Language Processing'),
       (5,'Computer Vision'),
       (6,'Big Data'),
       (6,'Data Science'),
       (6,'Data Mining'),
       (6,'Information Retrieval');

insert into graph(pre_id, post_id)
values (2,1),
       (2,4),
       (3,5),
       (4,6),
       (4,7),
       (18,7),
       (7,8),
       (6,9),
       (9,10),
       (18,19),
       (19,12),
       (12,11),
       (12,13),
       (12,14),
       (18,15),
       (12,16),
       (7,17),
       (18,20),
       (12,21),
       (7,22),
       (3,22),
       (18,23),
       (18,24),
       (4,24),
       (1,25),
       (2,25),
       (3,25),
       (18,25),
       (25,24),
       (24,26),
       (24,27),
       (17,28),
       (1,29),
       (29,30),
       (1,31),
       (18,31);




insert into course(subcategory_id, name, provider, description, difficulty, est_hour, website, video, assignment)
values (2,'Calculus I: Single Variable Calculus','Massachusetts Institute of Technology','Master the calculus of derivatives, integrals, coordinate systems, and infinite series.',1,120,'https://ocw.mit.edu/courses/res-18-005-highlights-of-calculus-spring-2010/video_galleries/highlights_of_calculus/','https://www.edx.org/xseries/mitx-18.01x-single-variable-calculus?index=undefined','https://www.edx.org/xseries/mitx-18.01x-single-variable-calculus?index=undefined'),
       (2,'Multivariable Calculus','Massachusetts Institute of Technology','This course covers differential, integral and vector calculus for functions of more than one variable. These mathematical tools and methods are used extensively in the physical sciences, engineering, economics and computer graphics.',1,140,'https://ocw.mit.edu/courses/18-02sc-multivariable-calculus-fall-2010/','https://ocw.mit.edu/courses/18-02sc-multivariable-calculus-fall-2010/pages/syllabus/','https://ocw.mit.edu/courses/18-02sc-multivariable-calculus-fall-2010/pages/syllabus/'),
       (4,'Mathematics for Computer Science','Massachusetts Institute of Technology','This course covers elementary discrete mathematics for computer science and engineering. It emphasizes mathematical definitions and proofs as well as applicable methods.',2,160,'https://ocw.mit.edu/courses/6-042j-mathematics-for-computer-science-fall-2010/','https://www.youtube.com/playlist?list=PLB7540DEDD482705B','https://ocw.mit.edu/courses/6-042j-mathematics-for-computer-science-fall-2010/pages/assignments/'),
       (1,'Statistics 110: Probability','Harvard University','Stat 110 is an introduction to probability as a language and set of tools for understanding statistics, science, risk, and randomness. The ideas and methods are useful in statistics, science, engineering, economics, finance, and everyday life.',3,140,'https://projects.iq.harvard.edu/stat110','https://www.youtube.com/playlist?list=PL2SOU6wwxB0uwwH80KTQ6ht66KWxbzTIo','https://projects.iq.harvard.edu/stat110/strategic-practice-problems'),
       (1,'Statistics for Applications','Massachusetts Institute of Technology','This course is a broad treatment of statistics, concentrating on specific statistical techniques used in science and industry.',4,140,'https://ocw.mit.edu/courses/18-443-statistics-for-applications-spring-2015/','https://www.youtube.com/playlist?list=PLUl4u3cNGP60uVBMaoNERc6knT_MgPKS0','https://ocw.mit.edu/courses/18-443-statistics-for-applications-spring-2015/pages/assignments/'),
       (3,'Linear Algebra','Massachusetts Institute of Technology','This course covers matrix theory and linear algebra, emphasizing topics useful in other disciplines such as physics, economics and social sciences, natural sciences, and engineering. It parallels the combination of theory and applications in Professor Strang’s textbook Introduction to Linear Algebra.',2,140,'https://ocw.mit.edu/courses/18-06sc-linear-algebra-fall-2011/','https://www.youtube.com/playlist?list=PL221E2BBF13BECF6C','https://ocw.mit.edu/courses/18-06sc-linear-algebra-fall-2011/'),
       (20,'Software Engineering','Cornell University','This course is an introduction to the practical problems of specifying, designing, building, testing, and delivering reliable software systems. Special topics include professionalism, project management, and the legal framework for software development. As a central part of the course, student teams carry out projects for real clients, using concepts of agile software development. Each project includes all aspects of software development from a feasibility study to final delivery.',3,50,'https://www.cs.cornell.edu/courses/cs5150/2020sp/lectures.html','https://www.cs.cornell.edu/courses/cs5150/2020sp/lectures.html','https://www.cs.cornell.edu/courses/cs5150/2020sp/projects.html'),
       (5,'Numerical Analysis','University of Illinois Urbana-Champaign','Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations.',3,160,'https://relate.cs.illinois.edu/course/cs450-s21/','https://www.bilibili.com/video/BV1Vq4y1L7yM/','https://relate.cs.illinois.edu/course/cs450-s21/'),
       (19,'Safety in Systems Programming','Stanford University','This class is focused on safety and robustness in systems programming: Where do things often go wrong in computer systems? How can we avoid common pitfalls? We will use the Rust programming language as a vehicle to teach mental models and paradigms that have been shown to be helpful in preventing errors, and we will look at how these features have made their way back into C++.',4,60,'https://reberhardt.com/cs110l/spring-2020/','https://reberhardt.com/cs110l/spring-2020/','https://reberhardt.com/cs110l/spring-2020/'),
       (3,'Matrix Methods in Data Analysis, Signal Processing, and Machine Learning','Massachusetts Institute of Technology','Linear algebra concepts are key for understanding and creating machine learning algorithms, especially as applied to deep learning and neural networks. This course reviews linear algebra with applications to probability and statistics and optimization–and above all a full explanation of deep learning.',3,140,'https://ocw.mit.edu/courses/18-065-matrix-methods-in-data-analysis-signal-processing-and-machine-learning-spring-2018/','https://www.youtube.com/playlist?list=PLFBPgxvkodCqCTVN0isaSA6S--hSTFgEw','https://ocw.mit.edu/courses/18-065-matrix-methods-in-data-analysis-signal-processing-and-machine-learning-spring-2018/pages/assignments/'),
       (18,'The Missing Semester of Your CS Education','Massachusetts Institute of Technology','We’ll teach you how to master the command-line, use a powerful text editor, use fancy features of version control systems, and much more!',1,50,'https://missing.csail.mit.edu','https://www.youtube.com/playlist?list=PLyzOVJj3bHQuloKGG59rS43e29ro7I57J','https://missing.csail.mit.edu/2020/'),
       (19,'Introduction to Programming Systems in C','Princeton University','Developing programming skills for systems building, including modular program design, programming style, testing, debugging, and performance tuning. Additionally, an introduction to ARM assembly language and machine language.',2,70,'https://www.cs.princeton.edu/courses/archive/fall21/cos217/schedule.html','https://www.youtube.com/playlist?list=PLwXw5yrGdQS7zpF7M7yKQPJu7s7fFpnF3','https://www.cs.princeton.edu/courses/archive/fall21/cos217/assignments.html'),
       (21,'Scalable Software Architectures','Northwestern University','We''ll study the architecture of high-scale Internet services, using well-known case studies like Google Search, Netflix, and Uber.  System at these scales have many custom-built components, but they also contain many common building blocks that can be reused in other systems.  Students will apply lessons learned from case studies to build software systems in the cloud capable of scaling to millions of users, and they will do so with surprisingly little code.',5,100,'https://stevetarzia.com/teaching/310/slides/','https://www.youtube.com/playlist?list=PLWl7jvxH18r0u5VRZsOjhghNXc_Ec4dZz','https://stevetarzia.com/teaching/310/projects/'),
       (18,'Computer Programming I in Java','University of Washington','Basic programming-in-the-small abilities and concepts including procedural programming (methods, parameters, return, values), basic control structures (sequence, if/else, for loop, while loop), file processing, arrays, and an introduction to defining objects. Intended for students without prior programming experience.',1,125,'https://courses.cs.washington.edu/courses/cse142/20sp/calendar.shtml','https://www.youtube.com/playlist?list=PLMnqwkW7oW7EhGxyJ1peKXC-d7JfBVS6N','https://courses.cs.washington.edu/courses/cse142/20sp/handouts.shtml'),
       (18,'Computer Programming II in Java','University of Washington','Continuation of CSE 142. Concepts of data abstraction and encapsulation including stacks, queues, linked lists, binary trees, recursion, instruction to complexity and use of predefined collection classes.',2,125,'https://courses.cs.washington.edu/courses/cse143/21sp/calendar.shtml','https://www.youtube.com/playlist?list=PLMnqwkW7oW7EIbAYvuMx-he6AnPK6GYR0','https://courses.cs.washington.edu/courses/cse143/21sp/homework.shtml'),
       (18,'CS50''s Introduction to Computer Science','Harvard University','An introduction to the intellectual enterprises of computer science and the art of programming.',1,70,'https://cs50.harvard.edu/x/2022/','https://www.youtube.com/c/cs50/featured','https://www.edx.org/cs50'),
       (18,'Structure and Interpretation of Computer Programs in Python','University of California, Berkeley','An introduction to programming and computer science focused on abstraction techniques as means to manage program complexity. Techniques include procedural abstraction; control abstraction using recursion, higher-order functions, generators, and streams; data abstraction using interfaces, objects, classes, and generic operators; and language abstraction using interpreters and macros. The course exposes students to programming paradigms, including functional, object-oriented, and declarative approaches. It includes an introduction to asymptotic analysis of algorithms. There are several significant programming projects.',2,120,'http://cs61a.org','https://www.youtube.com/c/JohnDeNero/playlists','https://cs61a.org'),
       (18,'Programming Methodology in Java','Stanford University','CS106A focuses on fundamental concepts in computer programming (ifstatements, methods, arrays, etc.) that arise in many different programming languages. Although CS106A is taught using the Java programming language, it is not designed as a class in standard Java programming.',2,110,'https://web.stanford.edu/class/archive/cs/cs106a/cs106a.1176/','https://www.bilibili.com/video/BV1Nb41167iU','https://web.stanford.edu/class/archive/cs/cs106a/cs106a.1176/homework.shtml'),
       (7,'Data Structures and Algorithms in Java','University of California, Berkeley','The CS 61 series is an introduction to Computer Science, with particular emphasis on software and machines from a programmer’s point of view. CS 61A covered high-level approaches to problem-solving, providing you with a variety of ways to organize solutions to programming problems as compositions of functions, collections of objects, or sets of rules. In CS 61B, we move to a somewhat more detailed (and to some extent, more basic) level of programming by focusing particularly on the efficiency of writing programs (design) and running programs (runtime).',3,160,'https://fa22.datastructur.es','https://www.youtube.com/channel/UC7FzTMO4rKvlqIyU5vwzFKQ/playlists','https://fa22.datastructur.es'),
       (7,'Programming Abstractions in C++','Stanford University','CS106B is our second course in computer programming. It focuses on techniques for solving more complex problems than those covered in CS106A and for analyzing program efficiency. Specifically, it explores fundamental data types and data structures, recursive problem solving, graph algorithms, and basic algorithmic analysis.',3,100,'https://web.stanford.edu/class/archive/cs/cs106b/cs106b.1184/','https://www.bilibili.com/video/BV1G7411k7jG','https://web.stanford.edu/class/archive/cs/cs106b/cs106b.1184/homework.shtml'),
       (8,'Algorithms Specialization','Stanford University','Algorithms are the heart of computer science, and the subject has countless practical applications as well as intellectual depth.  This specialization is an introduction to algorithms for learners with at least a little programming experience.  The specialization is rigorous but emphasizes the big picture and conceptual understanding over low-level implementation and mathematical details.  After completing this specialization, you will be well-positioned to ace your technical interviews and speak fluently about algorithms with other programmers and computer scientists.',4,180,'https://www.coursera.org/specializations/algorithms','https://www.youtube.com/channel/UCH4s4ek5zqNvct5oy9_jd_g/playlists','https://www.coursera.org/specializations/algorithms'),
       (8,'A Second Course in Algorithms','Stanford University','Algorithms for network optimization: max-flow, min-cost flow, matching, assignment, and min-cut problems. Introduction to linear programming. Use of LP duality for design and analysis of algorithms. Approximation algorithms for NP-complete problems such as Steiner Trees, Traveling Salesman, and scheduling problems. Randomized algorithms. Introduction to online algorithms.',5,130,'http://timroughgarden.org/w16/w16.html','https://www.youtube.com/playlist?list=PLEGCF-WLh2RJh2yDxlJJjnKswWdoO8gAc','http://timroughgarden.org/w16/w16.html'),
       (8,'Beyond Worst-Case Analysis','Stanford University','In the worst-case analysis of algorithms, the overall performance of an algorithm is summarized by its worst performance on any input. This approach has countless success stories, but there are also important computational problems --- like linear programming, clustering, and online caching --- where the worst-case analysis framework does not provide any helpful advice on how to solve the problem. This course covers a number of modeling methods for going beyond worst-case analysis and articulating which inputs are the most relevant.',5,120,'http://timroughgarden.org/w17/w17.html','https://www.youtube.com/playlist?list=PLEGCF-WLh2RL8jsZpaf2tLHa5LotFEt5b','http://timroughgarden.org/w17/w17.html'),
       (8,'Algorithmic Game Theory','ETH Zürich','Game theory provides a good model for the behavior and interaction of rational/selfish agents and programs in large-scale distributed systems without central control. The course discusses algorithmic aspects of game theory, such as a general introduction to game theory, auctions, mechanisms, the costs of a central control optimum versus those of an equilibrium under selfish agents, and algorithms and complexity of computing equilibria.',5,150,'http://ml2.inf.ethz.ch/courses/agt/','https://www.bilibili.com/video/BV1oL4y1J715','http://ml2.inf.ethz.ch/courses/agt/'),
       (8,'Introduction to Algorithms','Massachusetts Institute of Technology','This course is an introduction to mathematical modeling of computational problems, as well as common algorithms, algorithmic paradigms, and data structures used to solve these problems. It emphasizes the relationship between algorithms and programming and introduces basic performance measures and analysis techniques for these problems.',4,180,'https://ocw.mit.edu/courses/6-006-introduction-to-algorithms-spring-2020/','https://www.youtube.com/playlist?list=PLUl4u3cNGP63EdVPNLG3ToM6LaEUuStEY','https://ocw.mit.edu/courses/6-006-introduction-to-algorithms-spring-2020/pages/practice-problems/'),
       (8,'Design and Analysis of Algorithms','Massachusetts Institute of Technology','This is an intermediate algorithms course with an emphasis on teaching techniques for the design and analysis of efficient algorithms, emphasizing methods of application. Topics include divide-and-conquer, randomization, dynamic programming, greedy algorithms, incremental improvement, complexity, and cryptography.',5,200,'https://ocw.mit.edu/courses/6-046j-design-and-analysis-of-algorithms-spring-2015/','https://www.youtube.com/playlist?list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp','https://ocw.mit.edu/courses/6-046j-design-and-analysis-of-algorithms-spring-2015/pages/assignments/'),
       (11,'Build a Modern Computer from First Principles: Nand to Tetris','Hebrew University of Jerusalem','The site contains all the project materials and tools necessary for building a general-purpose computer system and a modern software hierarchy from the ground up.',3,180,'https://www.nand2tetris.org','https://www.bilibili.com/video/BV1KJ411s7QJ','https://www.nand2tetris.org/course'),
       (11,'Computation Structures','Massachusetts Institute of Technology','This course introduces architecture of digital systems, emphasizing structural principles common to a wide range of technologies. It covers the topics including multilevel implementation strategies, definition of new primitives (e.g., gates, instructions, procedures, processes) and their mechanization using lower-level elements. It also includes analysis of potential concurrency, precedence constraints and performance measures, pipelined and multidimensional systems, instruction set design issues and architectural support for contemporary software structures.',3,90,'https://ocw.mit.edu/courses/6-004-computation-structures-spring-2017/','https://www.youtube.com/playlist?list=PLUl4u3cNGP62WVs95MNq3dQBqY2vGOtQ2','https://ocw.mit.edu/courses/6-004-computation-structures-spring-2017/'),
       (11,'Great Ideas in Computer Architecture','University of California, Berkeley','CS61C teaches the internal organization and operation of digital computers with a new emphasis on advances in parallelism.  The subjects covered include C and assembly language programming, memory management, how higher level programs are translated into machine language, computer organization, caches, performance measurement, parallelism, CPU design, warehouse‐scale computing, and related topics.',4,160,'https://inst.eecs.berkeley.edu/~cs61c/sp22/','https://www.bilibili.com/video/BV1uS4y187Vi','https://inst.eecs.berkeley.edu/~cs61c/sp22/labs/'),
       (11,'Digital Design and Computer Architecture','ETH Zürich','The class provides a first introduction to the design of digital circuits and computer architecture. It covers technical foundations of how a computing platform is designed from the bottom up. It introduces various execution paradigms, hardware description languages, and principles in digital design and computer architecture. The focus is on fundamental techniques employed in the design of modern microprocessors and their hardware/software interface.',3,200,'https://safari.ethz.ch/digitaltechnik/spring2022/doku.php','https://www.youtube.com/playlist?list=PL5Q2soXY2Zi97Ya5DEUpMpO2bbAoaG7c6','https://safari.ethz.ch/digitaltechnik/spring2022/doku.php?id=labs'),
       (11,'Computer Architecture','ETH Zürich','Computer architecture is the science and art of selecting and interconnecting hardware components to create a computer that meets functional, performance and cost goals. This course introduces the basic hardware structure of a modern programmable computer, including the basic laws underlying performance evaluation.',4,300,'https://safari.ethz.ch/architecture/fall2021/doku.php','https://www.youtube.com/playlist?list=PL5Q2soXY2Zi-Mnk1PxjEIG32HAGILkTOF','https://safari.ethz.ch/architecture/fall2021/doku.php?id=labs'),
       (11,'Seminar in Computer Architecture','ETH Zürich','In this seminar course, we will cover fundamental and cutting-edge research papers in computer architecture. The course will consist of multiple components that are aimed at improving students (1) technical skills in computer architecture, (2) critical thinking and analysis abilities on computer architecture concepts, as well as (3) technical presentation of concepts and papers in both spoken and written forms.',5,100,'https://safari.ethz.ch/architecture/fall2021/doku.php','https://www.youtube.com/playlist?list=PL5Q2soXY2Zi_hxizriwKmFHgcoe2Q8-m0','https://safari.ethz.ch/architecture_seminar/spring2022/doku.php?id=sessions'),
       (11,'Computer Architecture and Engineering','University of California, Berkeley','CS152 is intended to provide a foundation for students interested in performance programming, compilers, and operating systems, as well as computer architecture and engineering. Our goal is for you to better understand how software interacts with hardware, and to understand how trends in technology, applications, and economics drive continuing changes in the field.',5,140,'https://inst.eecs.berkeley.edu/~cs152/sp21/','https://www.bilibili.com/video/BV1pK4y1d7ff','https://inst.eecs.berkeley.edu/~cs152/sp21/'),
       (13,'Parallel Computer Architecture and Programming','Carnegie Mellon University','rom smart phones, to multi-core CPUs and GPUs, to the world''s largest supercomputers, parallel processing is ubiquitous in modern computing. The goal of this course is to provide a deep understanding of the fundamental principles and engineering trade-offs involved in designing modern parallel computing systems as well as to teach parallel programming techniques necessary to effectively utilize these machines. Because writing good parallel programs requires an understanding of key machine performance characteristics, this course will cover hardware design and how that affects software design.',5,180,'https://www.cs.cmu.edu/afs/cs/academic/class/15418-s18/www/index.html','https://www.bilibili.com/video/BV11A411c7pF','https://www.cs.cmu.edu/afs/cs/academic/class/15418-s18/www/assignments.html'),
       (11,'Computer Systems: A Programmer''s Perspective','Carnegie Mellon University','The ICS course provides a programmer''s view of how computer systems execute programs, store information, and communicate. It enables students to become more effective programmers, especially in dealing with issues of performance, portability and robustness. It also serves as a foundation for courses on compilers, networks, operating systems, and computer architecture, where a deeper understanding of systems-level issues is required.',3,160,'https://www.cs.cmu.edu/~213/index.html','https://www.bilibili.com/video/BV17t411s7E5','https://www.cs.cmu.edu/~213/labs.html'),
       (12,'Operating System Engineering','Massachusetts Institute of Technology','6.S081 is an intermediate course in MIT for undergraduate CS students. This course involves some of the most important ideas in operating systems and provides some practice to get students familiar with those ideas.',4,180,'https://pdos.csail.mit.edu/6.S081/2021/schedule.html','https://www.bilibili.com/video/BV19k4y1C7kA','https://pdos.csail.mit.edu/6.S081/2021/schedule.html'),
       (12,'Operating Systems and Systems Programming','University of California, Berkeley','asic concepts of operating systems and system programming. Utility programs, subsystems, multiple-program systems. Processes, interprocess communication, and synchronization. Memory allocation, segmentation, paging. Loading and linking, libraries. Resource allocation, scheduling, performance evaluation. File systems, storage devices, I/O systems. Protection, security, and privacy.',4,180,'https://inst.eecs.berkeley.edu/~cs162/sp22/','https://www.bilibili.com/video/BV1L541117gr','https://inst.eecs.berkeley.edu/~cs162/sp22/'),
       (12,'Introduction to Operating Systems','University of Wisconsin–Madison','This course will introduce you to an exciting range of materials from the broad field of operating systems, including basic operating system structure, process and thread synchronization and concurrency, file systems and storage servers, memory management techniques, process scheduling and resource management, virtualization, security, and even distributed systems (if there is time). That''s a lot of material! Amazingly, even after this course, you''ll realize we''ve just scratched the surface -- there is just so much to know about the wonderful world of computer systems.',4,200,'https://pages.cs.wisc.edu/~remzi/Classes/537/Fall2021/','https://pages.cs.wisc.edu/~remzi/Classes/537/Fall2021/Discussion/videos.html','https://pages.cs.wisc.edu/~remzi/OSTEP/Homework/homework.html'),
       (21,'CS50''s Web Programming with Python and JavaScript','Harvard University','This course picks up where CS50x leaves off, diving more deeply into the design and implementation of web apps with Python, JavaScript, and SQL using frameworks like Django, React, and Bootstrap.',2,70,'https://cs50.harvard.edu/web/2020/','https://www.youtube.com/playlist?list=PLhQjrBD2T380xvFSUmToMMzERZ3qB5Ueu','https://cs50.harvard.edu/web/2020/projects/'),
       (18,'CS50''s Introduction to Programming with Python','Harvard University','An introduction to programming using a language called Python. Learn how to read and write code as well as how to test and “debug” it. Designed for students with or without prior programming experience who’d like to learn Python specifically.',1,70,'https://cs50.harvard.edu/python/2022/','https://www.youtube.com/playlist?list=PLhQjrBD2T3817j24-GogXmWqO5Q5vYy0V','https://cs50.harvard.edu/python/2022/psets/'),
       (15,'Computer Networking: A Top-Down Approach','University of Massachusetts Amherst','A balanced presentation focuses on the Internet as a specific motivating example of a network and also introduces students to protocols in a more theoretical context.',3,50,'https://gaia.cs.umass.edu/kurose_ross/index.php','https://gaia.cs.umass.edu/kurose_ross/lectures.php','https://gaia.cs.umass.edu/kurose_ross/wireshark.php'),
       (15,'Fundamentals of Computer Networks','Carnegie Mellon University','My primary objective is for you to learn the fundamental principles underlying computer networks. I''ll use a top-down approach to cover topics in the application, transport, network and link layers of the protocol stack. We will also go over advanced topics, including network management, traffic engineering and router internals. Besides learning about the nuts and bolts, you will gain an understanding of engineering tradeoffs made and design principles used in networks and protocol design.',4,180,'http://www.ini740.rocks/F21/','https://www.bilibili.com/video/BV1HV411h7Vw','http://www.ini740.rocks/F21/index.html#assignments'),
       (14,'Distributed Systems','Massachusetts Institute of Technology','6.824 is a systems class. It has a lot of coding assignments and debugging concurrent programs. This is hard to do for anyone. It can really be a pain but its really rewarding when you build a highly consistent distributed key value store.',5,200,'https://pdos.csail.mit.edu/6.824/schedule.html','https://www.bilibili.com/video/BV16f4y1z7kn','https://pdos.csail.mit.edu/6.824/schedule.html'),
       (16,'Computer Security','University of California, Berkeley','Introduction to computer security. Cryptography, including encryption, authentication, hash functions, cryptographic protocols, and applications. Operating system security, access control. Network security, firewalls, viruses, and worms. Software security, defensive programming, and language-based security. Case studies from real-world systems.',5,150,'https://sp22.cs161.org','https://www.bilibili.com/video/BV1ZS4y1p7Eo','https://sp22.cs161.org'),
       (12,'Computer Systems Engineering','Massachusetts Institute of Technology','6.033 covers four units of technical content: operating systems, networking, distributed systems, and security. Lectures deliver the fundamental technical concepts; recitations show you how those concepts are applied to real systems. In tutorial, you''ll learn communication skills to help you reason about systems, and describe and defend your own.',4,100,'https://web.mit.edu/6.033/2021/wwwdocs/index.shtml','https://www.bilibili.com/video/BV12T4y1R78D','https://web.mit.edu/6.033/2019/wwwdocs/handsons.shtml'),
       (16,'Computer System Security','Massachusetts Institute of Technology','Design and implementation of secure computer systems. Lectures cover threat models, attacks that compromise security, and techniques for achieving security, based on recent research papers. Topics include operating system (OS) security, capabilities, information flow control, language security, network protocols, hardware security, and security in web applications. Assignments include labs that involve implementing and compromising a secure web server and web application, and a group final project.',5,150,'https://css.csail.mit.edu/6.858/2022/','https://www.youtube.com/playlist?list=PLA6Ht2dJt3SLdj0t--M5EjjpmDU5gLrYD','http://css.csail.mit.edu/6.858/2022/'),
       (23,'CS50''s Introduction to Artificial Intelligence with Python','Harvard University','This course explores the concepts and algorithms at the foundation of modern artificial intelligence, diving into the ideas that give rise to technologies like game-playing engines, handwriting recognition, and machine translation.',2,60,'https://cs50.harvard.edu/ai/2020/','https://www.youtube.com/playlist?list=PLhQjrBD2T382Nz7z1AEXmioc27axa19Kv','https://cs50.harvard.edu/ai/2020/projects/'),
       (17,'Introduction to Database System in Java','University of California, Berkeley',' Access methods and file systems to facilitate data access. Hierarchical, network, relational, and object-oriented data models. Query languages for models. Embedding query languages in programming languages. Database services including protection, integrity control, and alternative views of data. High-level interfaces including application generators, browsers, and report writers. Introduction to transaction processing. Database system implementation to be done as term project.',4,180,'https://cs186berkeley.net/sp22/','https://www.bilibili.com/video/BV1zu411y7kx','https://cs186.gitbook.io/project/'),
       (17,'Database Systems in C++','Carnegie Mellon University','This course is on the design and implementation of database management systems. Topics include data models (relational, document, key/value), storage models (n-ary, decomposition), query languages (SQL, stored procedures), storage architectures (heaps, log-structured), indexing (order preserving trees, hash tables), transaction processing (ACID, concurrency control), recovery (logging, checkpoints), query processing (joins, sorting, aggregation, optimization), and parallel architectures (multi-core, distributed).',4,150,'https://15445.courses.cs.cmu.edu/fall2022/schedule.html','https://www.youtube.com/playlist?list=PLSE8ODhjZXjaKScG3l0nuOiDTTqpfnWFf','https://15445.courses.cs.cmu.edu/fall2022/assignments.html'),
       (17,'Advanced Database Systems','Carnegie Mellon University','This course is a comprehensive study of the internals of modern database management systems. It will cover the core concepts and fundamentals of the components that are used in both high-performance transaction processing systems (OLTP) and large-scale analytical systems (OLAP). The class will stress both efficiency and correctness of the implementation of these ideas. All class projects will be in the context of a real in-memory, multi-core database system. The course is appropriate for graduate students in software systems and for advanced undergraduates with dirty systems programming skills.',5,160,'https://15721.courses.cs.cmu.edu/spring2020/schedule.html','https://www.youtube.com/playlist?list=PLSE8ODhjZXjasmrEd2_Yi1deeE360zv5O','https://15721.courses.cs.cmu.edu/spring2020/projects.html'),
       (17,'Information Systems for Engineers','ETH Zürich','This course provides the basics of information systems from the perspective of the user. The main focus is on relational databases, including tabular data, the relational algebra, the SQL query language, schema design, normal forms, physical architecture, indices. The course also covers support for data cubes on top of relational databases.',3,100,'https://systems.ethz.ch/education/courses/2020-fall/information-systems-for-engineers.html','https://www.youtube.com/playlist?list=PLs5KPrcFtb0VgSmWH5861Rhn7ccOKILMF','https://systems.ethz.ch/education/courses/2020-fall/information-systems-for-engineers.html'),
       (28,'Big Data','ETH Zürich','In this course, you will learn to query gigantic amounts of (potentially messy) data on clusters of machines. You will also learn all the secrets of what happens behind the scenes to make it all work.',4,150,'https://systems.ethz.ch/education/courses/2021-autumn/big-data.html','https://www.youtube.com/playlist?list=PLs5KPrcFtb0WjJxkOz_uvQd6mxBdthGim','https://github.com/RumbleDB/bigdata-exercises/tree/master/Big_Data'),
       (31,'Information Retrieval','ETH Zürich','This course gives an introduction to information retrieval with a focus on text documents and unstructured data. Main topics comprise document modelling, various retrieval techniques, indexing techniques, query frameworks, optimization, evaluation and feedback.',5,100,'https://systems.ethz.ch/education/courses/2021-spring/information-retrieval.html','https://www.youtube.com/playlist?list=PLs5KPrcFtb0UtG4ILOX27gDbUivxW5QUT','http://www.da.inf.ethz.ch/teaching/2015/Information-Retrieval/'),
       (29,'Foundations of Data Science in Python','University of California, Berkeley','The UC Berkeley Foundations of Data Science course combines three perspectives: inferential thinking, computational thinking, and real-world relevance. Given data arising from some real-world phenomenon, how does one analyze that data so as to understand that phenomenon? The course teaches critical concepts and skills in computer programming and statistical inference, in conjunction with hands-on analysis of real-world datasets, including economic data, document collections, geographical data, and social networks. It delves into social issues surrounding data analysis such as privacy and design.',2,180,'http://data8.org/fa22/index.html','http://data8.org/fa22/index.html','https://github.com/data-8/data8assets'),
       (30,'Mining Massive Data Sets','Massachusetts Institute of Technology','The course will discuss data mining and machine learning algorithms for analyzing very large amounts of data. The emphasis will be on MapReduce and Spark as tools for creating parallel algorithms that can process very large amounts of data.',5,150,'http://snap.stanford.edu/class/cs246-2019/','https://www.bilibili.com/video/BV1SC4y187x1','http://snap.stanford.edu/class/cs246-2019/'),
       (29,'Principles and Techniques of Data Science in Python','University of California, Berkeley','Combining data, computation, and inferential thinking, data science is redefining how people and organizations solve challenging problems and understand their world. This intermediate level class bridges between Data 8 and upper division computer science and statistics courses as well as methods courses in other fields. In this class, we explore key areas of data science including question formulation, data collection and cleaning, visualization, statistical inference, predictive modeling, and decision making.',3,120,'https://ds100.org/sp22/','https://ds100.org/sp22/','https://github.com/anniedang123/data100'),
       (15,'Introduction to Computer Networking','Northwestern University','A top-down exploration of networking using the 5-layer model and the TCP/IP stack. HTTP, FTP, DNS, BSD Sockets, concurrent servers, checksums, reliable transport with stop-and-wait, go-back-n, selective repeat, flow control, congestion control, TCP, unicast routing, multicast routing, router architecture, IP, IPv6, IP multicast, MAC protocols and LANs, Ethernet , wireless networks, and network security. Over the course of the quarter, students build web clients and servers, a fully compatible TCP/IP stack that can run them, and evaluate routing protocols in simulation.',4,120,'https://stevetarzia.com/teaching/340/slides/','https://www.youtube.com/playlist?list=PLWl7jvxH18r3nnotitKkyAjq268PQGc0-','https://stevetarzia.com/teaching/340/projects/'),
       (20,'Software Analysis in C','University of Pennsylvania','This course provides a rigorous and hands-on introduction to the field of software analysis – a body of powerful yet practical techniques and tools for analyzing modern software, with applications to systematically uncover insidious bugs, prevent security vulnerabilities, automate testing and debugging, and improve our confidence that software will behave as intended.',3,60,'https://software-analysis-class.org','https://www.youtube.com/playlist?list=PLF3-CvSRq2SYXEiS80KuZQ80q8K2aHLQX','https://software-analysis-class.org/labs'),
       (20,'Software Engineering for AI-Enabled Systems','Carnegie Mellon University','The course takes a software engineering perspective on building software systems with a significant machine learning or AI component. It discusses how to take an idea and a model developed by a data scientist (e.g., scripts and Jupyter notebook) and deploy it as part of scalable and maintainable system (e.g., mobile apps, web applications, IoT devices). Rather than focusing on modeling and learning itself, this course assumes a working relationship with a data scientist and focuses on issues of design, implementation, operation, and assurance and how those interact with the data scientist''s modeling.',4,150,'https://ckaestne.github.io/seai/S2020/','https://www.youtube.com/playlist?list=PLDS2JMJnJzdkQPdkhcuwcbJpjB84g9ffX','https://github.com/ckaestne/seai/tree/S2020'),
       (20,'Software Design and Architecture Specialization in Java','University of Alberta','In the Software Design and Architecture Specialization, you will learn how to apply design principles, patterns, and architectures to create reusable and flexible software applications and systems. You will learn how to express and document the design and architecture of a software system using a visual notation.',3,200,'https://www.coursera.org/specializations/software-design-architecture','https://www.coursera.org/specializations/software-design-architecture','https://www.coursera.org/specializations/software-design-architecture'),
       (20,'Software Construction in Java','Massachusetts Institute of Technology','6.005 Software Construction introduces fundamental principles and techniques of software development, i.e., how to write software that is safe from bugs, easy to understand, and ready for change. The course includes problem sets and a final project. Important topics include specifications and invariants; testing; abstract data types; design patterns for object-oriented programming; concurrent programming and concurrency; and functional programming.',3,30,'https://ocw.mit.edu/ans7870/6/6.005/s16/','https://www.bilibili.com/video/BV1Tp4y197XX','https://ocw.mit.edu/courses/6-005-software-construction-spring-2016/pages/problem-sets/'),
       (20,'Performance Engineering of Software Systems in C','Massachusetts Institute of Technology','6.172 is an 18-unit class that provides a hands-on, project-based introduction to building scalable and high-performance software systems. Topics include performance analysis, algorithmic techniques for high performance, instruction-level optimizations, caching optimizations, parallel programming, and building scalable systems.',5,150,'https://ocw.mit.edu/courses/6-172-performance-engineering-of-software-systems-fall-2018/','https://www.youtube.com/playlist?list=PLUl4u3cNGP63VIBQVWguXxZZi0566y7Wf','https://ocw.mit.edu/courses/6-172-performance-engineering-of-software-systems-fall-2018/pages/assignments/'),
       (6,'Theory of Computation','Massachusetts Institute of Technology','This course emphasizes computability and computational complexity theory. Topics include regular and context-free languages, decidable and undecidable problems, reducibility, recursive function theory, time and space measures on computation, completeness, hierarchy theorems, inherently complex problems, oracles, probabilistic computation, and interactive proof systems.',4,160,'https://ocw.mit.edu/courses/18-404j-theory-of-computation-fall-2020/','https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY','https://ocw.mit.edu/courses/18-404j-theory-of-computation-fall-2020/pages/assignments/'),
       (6,'Great Ideas in Theoretical Computer Science','Carnegie Mellon University','This course is about the rigorous study of computation, which is a fundamental component of our universe, the societies we live in, the new technologies we discover, as well as the minds we use to understand these things. Therefore, having the right language and tools to study computation is important. In this course, we explore some of the central results and questions regarding the nature of computation.',3,160,'https://www.cs251.com/modules.html','https://www.youtube.com/playlist?list=PLm3J0oaFux3aafQm568blS9blxtA_EWQv','https://www.cs.cmu.edu/~15251/hw/'),
       (6,'Undergraduate Complexity Theory','Carnegie Mellon University','Complexity theory is the study of how much of a resource (such as time, space, parallelism, or randomness) is required to perform some of the computations that interest us the most. In a standard algorithms course, one concentrates on giving resource efficient methods to solve interesting problems. In this course, we concentrate on techniques that prove or suggest that there are no efficient methods to solve many important problems.',4,200,'https://www.cs.cmu.edu/~odonnell/15455-s17/','https://www.youtube.com/playlist?list=PLm3J0oaFux3YL5vLXpzOyJiLtqLp6dCW2','https://www.cs.cmu.edu/~odonnell/15455-s17/'),
       (6,'Graduate Computational Complexity Theory','Carnegie Mellon University','An Intensive Introduction to Computational Complexity Theory. Covers most of what I think you should know to get started in complexity theory research.',5,160,'https://www.cs.cmu.edu/~odonnell/complexity17/','https://www.youtube.com/playlist?list=PLm3J0oaFux3b8Gg1DdaJOzYNsaXYLAOKH','https://www.cs.cmu.edu/~odonnell/complexity17/odonnell-graduate-complexity-notes.pdf'),
       (6,'CS Theory Toolkit at CMU','Carnegie Mellon University','This course will take a random walk through various mathematical topics that come in handy for theoretical computer science. It is intended mainly for students earlier in their graduate studies (or very strong undergraduates) who want to do theory research.',5,240,'https://www.diderot.one/courses/28/books','https://www.youtube.com/playlist?list=PLm3J0oaFux3ZYpFLwwrlv_EHH9wtH6pnX','https://www.cs.cmu.edu/~15751/'),
       (6,'Quantum Computation and Information','Carnegie Mellon University','This course will be an introduction to quantum computation and quantum information theory, from the perspective of theoretical computer science.',5,170,'https://www.cs.cmu.edu/~odonnell/quantum18/','https://www.youtube.com/playlist?list=PLm3J0oaFux3YL5qLskC6xQ24JpMwOAeJz','https://www.cs.cmu.edu/~odonnell/quantum18/'),
       (6,'Algorithms & Models of Computation','University of Illinois Urbana-Champaign','CS/ECE 374 covers fundamental tools and techniques from theoretical computer science, including design and analysis of algorithms, formal languages and automata, computability, and complexity. Specific topics include regular and context-free languages, finite-state automata, recursive algorithms (including divide and conquer, backtracking, dynamic programming, and greedy algorithms), fundamental graph algorithms (including depth- and breadth-first search, topological sorting, minimum spanning trees, and shortest paths), undecidability, and NP-completeness.',3,120,'https://courses.engr.illinois.edu/cs374/fa2020/lectures.html','https://www.bilibili.com/video/BV12i4y1M7n5','https://courses.engr.illinois.edu/cs374/fa2020/lectures.html'),
       (9,'Programming Languages & Compilers','University of Illinois Urbana-Champaign','Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation.',4,150,'https://uiuc-cs421-sp22.netlify.app','https://uiuc-cs421-sp22.netlify.app/lectures/','https://courses.engr.illinois.edu/cs421/fa2017/cs421a/mps/index.html'),
       (9,'Programming Language Design','University of Illinois Urbana-Champaign','Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models.',5,200,'https://fsl.cs.illinois.edu/teaching/2021/cs422/','https://www.bilibili.com/video/BV1tb4y1Q7Jd','https://fsl.cs.illinois.edu/teaching/2021/cs422/'),
       (9,'Programming Languages','University of Washington','Basic concepts of programming languages, including abstraction mechanisms, types, and scoping. Detailed study of several different programming paradigms, such as functional, object-oriented, and logic programming.',3,120,'https://courses.cs.washington.edu/courses/cse341/18au/','https://courses.cs.washington.edu/courses/cse341/18au/','https://courses.cs.washington.edu/courses/cse341/18au/'),
       (10,'Compilers','Harvard University','This course introduces students to the design and implementation of compilers  for programming languages. Specifically, students will learn how to systematically translate modern, high-level, programming languages into efficient, executable machine code.',5,150,'https://canvas.harvard.edu/courses/92158/pages/schedule','https://www.bilibili.com/video/BV1cT4y197hW','https://github.com/spartango/CS153'),
       (10,'Compilers','Stanford University','This course will discuss the major ideas used today in the implementation of programming language compilers, including lexical analysis, parsing, syntax-directed translation, abstract syntax trees, types and type checking, intermediate languages, dataflow analysis, program optimization, code generation, and runtime systems.',4,150,'http://openclassroom.stanford.edu/MainFolder/CoursePage.php?course=Compilers','https://www.bilibili.com/video/BV17K4y147Bz','http://openclassroom.stanford.edu/MainFolder/DocumentPage.php?course=Compilers&doc=docs/handouts.html'),
       (8,'Advanced Algorithms','Massachusetts Institute of Technology','The design and analysis of algorithms is one of the central pillars of computer science. This course is designed to be a capstone course in algorithms, and will expose students to some of the most powerful and modern modes of algorithmic thinking ---- as well as how to apply them. We will cover a wide variety of topics including hashing, dimension reduction, max flow, linear programming, semidefinite programming, approximation algorithms, multiplicative weights, gradient descent and compressed sensing, and bring students up to the level where they can read and understand research papers.',5,150,'http://people.csail.mit.edu/moitra/854.html','https://www.youtube.com/playlist?list=PL6ogFv-ieghdoGKGg2Bik3Gl1glBTEu8c','http://people.csail.mit.edu/moitra/854.html'),
       (6,'Automata, Computability, and Complexity Theory','Massachusetts Institute of Technology','What is computation? Given a definition of a computational model, what problems can we hope to solve in principle with this model? Besides those solvable in principle, what problems can we hope to efficiently solve? This course provides a mathematical introduction to these questions. In many cases we can give completely rigorous answers; in other cases, these questions have become major open problems in both pure and applied mathematics!',4,180,'https://people.csail.mit.edu/rrw/6.045-2020/','https://www.bilibili.com/video/BV18o4y1R748','https://ocw.mit.edu/courses/6-045j-automata-computability-and-complexity-spring-2011/pages/assignments/'),
       (16,'Cryptography','Massachusetts Institute of Technology','The last few years have witnessed dramatic developments in the foundations of cryptography as well as its applications to real-world privacy and security problems. On the one hand, security and privacy are of paramount importance in the age of big data and mass surveillance. On the other hand, cryptography is abuzz with solutions to long-standing open problems such as fully homomorphic encryption and software obfuscation that use the abundance of data for public good without compromising security. The course will explore both the rich theory of cryptography as well as its real-world applications.',5,150,'http://mit6875.org','https://www.youtube.com/playlist?list=PL6ogFv-ieghe8MOIcpD6UDtdK-UMHG8oH','http://mit6875.org'),
       (16,'Cryptocurrency Engineering and Design','Massachusetts Institute of Technology','Bitcoin and other cryptographic currencies have gained attention over the years as the systems continue to evolve. This course looks at the design of Bitcoin and other cryptocurrencies and how they function in practice, focusing on cryptography, game theory, and network architecture.',2,120,'https://ocw.mit.edu/courses/mas-s62-cryptocurrency-engineering-and-design-spring-2018/','https://www.youtube.com/playlist?list=PLUl4u3cNGP61KHzhg3JIJdK08JLSlcLId','https://ocw.mit.edu/courses/mas-s62-cryptocurrency-engineering-and-design-spring-2018/pages/assignments/'),
       (16,'Modern Cryptography','University of California, San Diego','This course is an introduction to modern cryptography. Topics include block ci- phers, hash functions, pseudorandom functions, symmetric encryption, message authentication, RSA, asymmetric encryption, digital signatures, key distribution and protocols. We will introduce the “provable security” approach, defining security for various primitives and then proving that schemes achieve the defined goals. We adopt a “theory brought to practice” viewpoint, focusing on cryptographic primitives that are used in practice and showing how theory leads to higher-assurance real world cryptography.',5,150,'https://cseweb.ucsd.edu//~mihir/cse207/index.html','https://www.youtube.com/playlist?list=PL-SStBoAJuw0vj8MgTFhY5y9wSFnjGbOB','https://cseweb.ucsd.edu/classes/sp22/cse207B-a/'),
       (16,'Blockchain and Money','Massachusetts Institute of Technology','This course is for students wishing to explore blockchain technology’s potential use—by entrepreneurs and incumbents—to change the world of money and finance. The course begins with a review of Bitcoin and an understanding of the commercial, technical, and public policy fundamentals of blockchain technology, distributed ledgers, and smart contracts. The class then continues on to current and potential blockchain applications in the financial sector.',1,150,'https://ocw.mit.edu/courses/15-s12-blockchain-and-money-fall-2018/','https://www.youtube.com/playlist?list=PLUl4u3cNGP63UUkfL0onkxF6MYgVa04Fn','https://ocw.mit.edu/courses/15-s12-blockchain-and-money-fall-2018/pages/assignments/'),
       (16,'Fintech: Shaping the Financial World','Massachusetts Institute of Technology','This course about financial technology, or FinTech, is for students wishing to explore the ways in which new technologies are disrupting the financial services industry—driving material change in business models, products, applications and customer user interface. Amongst the significant technological trends affecting financial services into the 2020’s, the class will explore AI, deep learning, blockchain technology and open APIs. Students will gain an understanding of the key technologies, market structure, participants, regulation and the dynamics of change being brought about by FinTech.',1,150,'https://ocw.mit.edu/courses/15-s08-fintech-shaping-the-financial-world-spring-2020/','https://www.youtube.com/playlist?list=PLUl4u3cNGP61Q_RVDn6srWbLV_zFnd9n0','https://ocw.mit.edu/courses/15-s08-fintech-shaping-the-financial-world-spring-2020/pages/assignments/'),
       (16,'Foundations of Blockchains','Stanford University','A lecture series on the science and technology of blockchain protocols and the applications built on top of them, with an emphasis on fundamental principles.',5,150,'https://timroughgarden.github.io/fob21/','https://www.youtube.com/playlist?list=PLEGCF-WLh2RLOHv_xUGLqRts_9JxrckiA','https://timroughgarden.github.io/fob21/'),
       (22,'GAMES101: 现代计算机图形学入门','University of California, Santa Barbara','本课程将全面而系统地介绍现代计算机图形学的四大组成部分：（1）光栅化成像，（2）几何表示，（3）光的传播理论，以及（4）动画与模拟。每个方面都会从基础原理出发讲解到实际应用，并介绍前沿的理论研究。通过本课程，你可以学习到计算机图形学背后的数学和物理知识，并锻炼实际的编程能力。',3,140,'https://sites.cs.ucsb.edu/~lingqi/teaching/games101.html','https://www.bilibili.com/video/BV1X7411F744','http://games-cn.org/forums/topic/allhw/'),
       (22,'GAMES202: 高质量实时渲染','University of California, Santa Barbara','本课程将全面地介绍现代实时渲染中的关键问题与解决方法。由于实时渲染 (>30 FPS) 对速度要求极高，因此本课程的关注点将是在苛刻的时间限制下，人们如何打破速度与质量之间的权衡，同时保证实时的高速度与照片级的真实感。',4,120,'https://sites.cs.ucsb.edu/~lingqi/teaching/games202.html','https://www.bilibili.com/video/BV1YK4y1T7yY','http://games-cn.org/forums/topic/games202zuoyehuizong/'),
       (22,'GAMES103：基于物理的计算机动画入门','Ohio State University','本课程将作为基于物理的计算机动画技术入门，着重介绍各种基础的物理动画模拟技术。该课程主要涵盖四个方向，分别为：1）刚体模拟；2）质点弹簧、约束与布料模拟；3）基于有限元的弹性体模拟；4）流体模拟。本课程内容将不会涉及具体的物理模拟引擎，但会讨论各种引擎背后的技术，以及它们的优缺点等等。由于开发学习物理模拟需要一定的数学基础，课程初始阶段也会花一定的时间复习必备的数学知识。顺利完成课程之后，同学们应该会对基础的物理模拟技术有深入理解，对高级的模拟技术也会有部分接触。',4,120,'http://games-cn.org/games103/','https://www.bilibili.com/video/BV12Q4y1S73g','https://github.com/indevn/GAMES103'),
       (22,'Physics-Based Animation','University of Toronto','This course is designed to introduce students to the field of physics-based animation by exposing them to the underlying mathematical and algorithmic techniques required to understand and develop efficient numerical simulations of physical phenomena such as rigid bodies, deformable bodies and fluids. In Physics-Based Animation we will learn how to develop algorithms that produce visually compelling representations of physical systems. We will learn the underlying continuous mathematics describing the motion of physical objects, explore how to discretize them and how to solve the resulting discrete equations quickly and robustly.',4,30,'https://github.com/dilevin/CSC417-physics-based-animation','https://www.youtube.com/playlist?list=PLTkE7n2CwG_PH09_q0Q7ttjqE2F9yGeM3','https://github.com/dilevin/CSC417-physics-based-animation'),
       (22,'Computer Graphics','Carnegie Mellon University','This course provides a comprehensive introduction to computer graphics. It focuses on fundamental concepts and techniques, and their cross-cutting relationship to multiple problem domains in graphics (rendering, animation, geometry, imaging).',4,150,'http://15462.courses.cs.cmu.edu/fall2020/','https://www.youtube.com/playlist?list=PL9_jI1bdZmz2emSh0UQ5iOdT2xRHFHL7E','http://15462.courses.cs.cmu.edu/fall2020/'),
       (22,'Introduction to Computer Graphics','Massachusetts Institute of Technology','This course provides introduction to computer graphics algorithms, software and hardware. Topics include: ray tracing, the graphics pipeline, transformations, texture mapping, shadows, sampling, global illumination, splines, animation and color.',4,140,'https://ocw.mit.edu/courses/6-837-computer-graphics-fall-2012/','https://www.youtube.com/playlist?list=PLQ3UicqQtfNuBjzJ-KEWmG1yjiRMXYKhh','https://ocw.mit.edu/courses/6-837-computer-graphics-fall-2012/pages/assignments/'),
       (22,'Interactive Computer Graphics','University of Illinois Urbana-Champaign','Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes.',3,70,'https://illinois-cs418.github.io/schedule','https://www.bilibili.com/video/BV1ZZ4y1P7uk','https://illinois-cs418.github.io/assignments'),
       (21,'Introduction to Game Development','University of Michigan','EECS 494 is the University of Michigan''s premiere game-development course. Implement small-to-medium sized video games using the industry-standard Unity3D Game Engine. Design purposeful, engaging user experiences. Practice non-engineering disciplines (art, music, psychology, writing, marketing) at a basic level.',4,240,'https://eecs494.com','https://www.bilibili.com/video/BV1Ui4y1978F','https://web.eecs.umich.edu/~sugih/courses/eecs494/'),
       (21,'CS50''s Introduction to Game Development','Harvard University','Learn about the development of 2D and 3D interactive games in this hands-on course, as you explore the design of games such as Super Mario Bros., Pokémon, Angry Birds, and more.',2,50,'https://cs50.harvard.edu/games/2018/','https://www.youtube.com/playlist?list=PLhQjrBD2T383Vx9-4vJYFsJbvZ_D17Qzh','https://cs50.harvard.edu/games/2018/'),
       (21,'Developing Apps for iOS','Stanford University','Stanford''s CS193p course, Developing Applications for iOS, explains the fundamentals of how to build applications for iPhone and iPad using SwiftUI.',4,120,'https://cs193p.sites.stanford.edu','https://www.youtube.com/playlist?list=PLpGHT1n4-mAsxuRxVPv7kj4-dQYoC3VVu','https://cs193p.sites.stanford.edu'),
       (21,'Android Workshop','Stanford University','Learn basic, foundational techniques for developing Android mobile applications and apply those toward building a single or multi page, networked Android application.',4,120,'https://web.stanford.edu/class/cs194a/','https://www.bilibili.com/video/BV1uA4y1d7xP','https://web.stanford.edu/class/cs194a/'),
       (24,'Dive into Deep Learning','Mu Li','本课程将从零开始教授深度学习。同学们只需要有基础的Python编程和数学基础。我们将覆盖四大类模型：多层感知机、卷积神经网络、循环神经网络、和注意力机制。在此之上，我们将介绍深度学习中的两大应用领域—计算机视觉和自然语言处理—中的典型任务。',3,13,'https://courses.d2l.ai/zh-v2/','https://space.bilibili.com/1567748478/channel/seriesdetail?sid=358497','https://courses.d2l.ai/zh-v2/'),
       (24,'AI Paper Reading','Mu Li','深度学习经典、新论文逐段精读',4,200,'https://github.com/mli/paper-reading','https://space.bilibili.com/1567748478/channel/collectiondetail?sid=32744','https://github.com/mli/paper-reading'),
       (25,'Practical Machine Learning','Mu Li','Applying Machine Learning (ML) to solve real problems accurately and robustly requires more than just training the latest ML model.',4,150,'https://c.d2l.ai/stanford-cs329p/','https://space.bilibili.com/1567748478/channel/collectiondetail?sid=28144','https://c.d2l.ai/stanford-cs329p/assignments.html'),
       (23,'Introduction to Artificial Intelligence','University of California, Berkeley','This course will introduce the basic ideas and techniques underlying the design of intelligent computer systems. A specific emphasis will be on the statistical and decision-theoretic modeling paradigm.',3,180,'https://inst.eecs.berkeley.edu/~cs188/fa21/','https://www.bilibili.com/video/BV1Xh411J7EN','https://inst.eecs.berkeley.edu/~cs188/fa21/projects/'),
       (4,'Discrete Mathematics and Probability Theory','University of California, Berkeley','Logic, infinity, and induction; applications include undecidability and stable marriage problem. Modular arithmetic and GCDs; applications include primality testing and cryptography. Polynomials; examples include error correcting codes and interpolation. Probability including sample spaces, independence, random variables, law of large numbers; examples include load balancing, existence arguments, Bayesian inference',3,200,'https://www.sp19.eecs70.org','https://www.bilibili.com/video/BV1Kq4y1k7gz','https://www.sp19.eecs70.org/calendar/'),
       (25,'Introduction to Machine Learning','University of California, Berkeley','Theoretical foundations, algorithms, methodologies, and applications for machine learning. Topics may include supervised methods for regression and classication (linear models, trees, neural networks, ensemble methods, instance-based methods); generative and discriminative probabilistic models; Bayesian parametric learning; density estimation and clustering; Bayesian networks; time series models; dimensionality reduction; programming projects covering a variety of real-world applications.',3,200,'https://people.eecs.berkeley.edu/~jrs/189/','https://www.bilibili.com/video/BV1Gr4y1s7nF','https://people.eecs.berkeley.edu/~jrs/189/'),
       (24,'Designing, Visualizing and Understanding Deep Neural Networks','University of California, Berkeley','Deep Networks have revolutionized computer vision, language technology, robotics and control. They have growing impact in many other areas of science and engineering. They do not however, follow a closed or compact set of theoretical principles. In Yann Lecun''s words they require an interplay between intuitive insights, theoretical modeling, practical implementations, empirical studies, and scientific analyses.This course attempts to cover that ground.',4,120,'https://cs182sp22.github.io','https://www.bilibili.com/video/BV1xB4y1m7xy','https://cs182sp22.github.io'),
       (24,'Introduction to Deep Learning','Carnegie Mellon University','In this course we will learn about the basics of deep neural networks, and their applications to various AI tasks. By the end of the course, it is expected that students will have significant familiarity with the subject, and be able to apply Deep Learning to a variety of tasks. They will also be positioned to understand much of the current literature on the topic and extend their knowledge through further study.',3,200,'https://deeplearning.cs.cmu.edu/F22/index.html','https://www.youtube.com/playlist?list=PLp-0K3kfddPxRmjgjm0P1WT6H-gTqE8j9','https://deeplearning.cs.cmu.edu/F22/index.html'),
       (24,'Introduction to Deep Learning','Massachusetts Institute of Technology','MIT''s introductory course on deep learning methods with applications to computer vision, natural language processing, biology, and more! Students will gain foundational knowledge of deep learning algorithms and get practical experience in building neural networks in TensorFlow. Course concludes with a project proposal competition with feedback from staff and panel of industry sponsors.',3,80,'http://introtodeeplearning.com','https://www.youtube.com/playlist?list=PLtBw6njQRU-rwp5__7C0oIVt26ZgjG9NI','http://introtodeeplearning.com'),
       (24,'Deep Reinforcement Learning','University of California, Berkeley','Intersection of control, reinforcement learning, and deep learning. Deep learning methods, which train large parametric function approximators, achieve excellent results on problems that require reasoning about unstructured real-world situations (e.g., computer vision, speech recognition, NLP).',4,160,'http://rail.eecs.berkeley.edu/deeprlcourse/','https://www.youtube.com/playlist?list=PL_iWQOsE6TfX7MaC6C3HcdOf1g337dlC9','http://rail.eecs.berkeley.edu/deeprlcourse/'),
       (25,'Machine Learning with Graphs','Stanford University','Complex data can be represented as a graph of relationships between objects. Such networks are a fundamental tool for modeling social, technological, and biological systems. This course focuses on the computational, algorithmic, and modeling challenges specific to the analysis of massive graphs. By means of studying the underlying graph structure and its features, students are introduced to machine learning techniques and data mining tools apt to reveal insights on a variety of networks.',3,120,'https://web.stanford.edu/class/cs224w/','https://www.youtube.com/playlist?list=PLoROMvodv4rPLKxIpqhjhPgdQy7imNkDn','https://web.stanford.edu/class/cs224w/index.html'),
       (25,'Machine Learning Compilation','Chen Tianqi','随着人工智能应用在我们的日常生活中变得越来越普遍，目前存在的挑战是如何在不同的生产环境中部署最新的人工智能模型。模型和部署环境的组合爆炸给训练和推理部署带来了巨大的挑战。此外，目前落地的模型也提出了更多的要求，例如减少软件依赖、全面的模型覆盖、利用新硬件进行加速、减少内存占用，以及更强的可扩展性。  这些模型训练和推理问题，涉及机器学习编程范式、基于学习的搜索算法、编译优化以及计算运行时。这些话题的组合生成了一个全新主题——机器学习编译，并且该方向正在不断持续发展。在本课程中，我们讲按照其中的关键元素，系统地研究这一新兴领域的关键要素。我们将学习一些核心的概念，用以表示机器学习程序、自动优化技术，以及在端到端机器学习部署中优化环境依赖、内存和性能的方法。',4,30,'https://mlc.ai/summer22-zh/schedule','https://www.bilibili.com/video/BV1kY411N7JA','https://mlc.ai/summer22-zh/schedule'),
       (24,'Deep Learning Systems','Carnegie Mellon University','The goal of this course is to provide students an understanding and overview of the “full stack” of deep learning systems, ranging from the high-level modeling design of modern deep learning systems, to the basic implementation of automatic differentiation tools, to the underlying device-level implementation of efficient algorithms.',4,150,'https://dlsyscourse.org/lectures/','https://www.youtube.com/channel/UC3-KIvmiIaZimgXMNt7F99g/videos','https://dlsyscourse.org/assignments/'),
       (25,'Probabilistic Graphical Models','Carnegie Mellon University','Many of the problems in artificial intelligence, statistics, computer systems, computer vision, natural language processing, and computational biology, among many other fields, can be viewed as the search for a coherent global conclusion from local information. The probabilistic graphical models framework provides an unified view for this wide range of problems, enables efficient inference, decision-making and learning in problems with a very large number of attributes and huge datasets. This graduate-level course will provide you with a strong foundation for both applying graphical models to complex problems and for addressing core research topics in graphical models.',5,180,'https://www.cs.cmu.edu/~epxing/Class/10708-20/lectures.html','https://www.youtube.com/playlist?list=PLoZgVqqHOumTqxIhcdcpOAJOOimrRCGZn','https://www.cs.cmu.edu/~epxing/Class/10708-20/homework.html'),
       (26,'Knowledge Graphs','Stanford University','This class is a graduate level research seminar and will include lectures on knowledge graph topics (e.g., data models, creation, inference, access) and invited lectures from prominent researchers and industry practitioners. The seminar emphasizes synthesis of AI, database systems and HCI in creating integrated intelligent systems centered around knowledge graphs.',4,130,'https://web.stanford.edu/~vinayc/kg/2021/index-2021.html','https://www.youtube.com/playlist?list=PLDhh0lALedc5paY4N3NRZ3j_ui9foL7Qc','https://web.stanford.edu/~vinayc/kg/2021/index-2021.html'),
       (27,'Convolutional Neural Networks for Visual Recognition','Stanford University','During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project.',4,100,'http://cs231n.stanford.edu/2017/syllabus.html','https://www.youtube.com/playlist?list=PL3FW7Lu3i5JvHM8ljYj-zLfQRF3EO8sYv','http://cs231n.stanford.edu/2017/syllabus.html'),
       (25,'Machine Learning','Stanford University','his course provides a broad introduction to machine learning and statistical pattern recognition. Topics include: supervised learning (generative/discriminative learning, parametric/non-parametric learning, neural networks, support vector machines); unsupervised learning (clustering, dimensionality reduction, kernel methods); learning theory (bias/variance tradeoffs, practical advice); reinforcement learning and adaptive control. The course will also discuss recent applications of machine learning, such as to robotic control, data mining, autonomous navigation, bioinformatics, speech recognition, and text and web data processing.',3,140,'https://cs229.stanford.edu/syllabus-autumn2018.html','https://www.youtube.com/playlist?list=PLoROMvodv4rMiGQp3WXShtMGgzqpfVfbU','https://cs229.stanford.edu/syllabus-autumn2018.html'),
       (27,'Deep Learning for Computer Vision','UUniversity of Michigan','This course is a deep dive into details of neural-network based deep learning methods for computer vision. During this course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. We will cover learning algorithms, neural network architectures, and practical engineering tricks for training and fine-tuning networks for visual recognition tasks.',4,170,'https://web.eecs.umich.edu/~justincj/teaching/eecs498/FA2019/schedule.html','https://www.youtube.com/playlist?list=PL5-TkQAfAZFbzxjBHtzdVCWE0Zbhomg7r','https://web.eecs.umich.edu/~justincj/teaching/eecs498/FA2019/schedule.html'),
       (26,'Natural Language Processing with Deep Learning','Stanford University','In this course, students will gain a thorough introduction to cutting-edge research in Deep Learning for NLP. Through lectures, assignments and a final project, students will learn the necessary skills to design, implement, and understand their own neural network models, using the Pytorch framework.',4,130,'https://web.stanford.edu/class/archive/cs/cs224n/cs224n.1214/index.html#schedule','https://www.youtube.com/playlist?list=PLoROMvodv4rOSH4v6133s9LFPRHjEmbmJ','https://web.stanford.edu/class/archive/cs/cs224n/cs224n.1214/index.html#schedule'),
       (25,'Multimodal Machine Learning','Carnegie Mellon University','The course will present the fundamental mathematical concepts in machine learning and deep learning relevant to the five main challenges in multimodal machine learning: (1) multimodal representation learning, (2) translation & mapping, (3) modality alignment, (4) multimodal fusion and (5) co-learning. These include, but not limited to, multimodal auto-encoder, deep canonical correlation analysis, multi-kernel learning, attention models and multimodal recurrent neural networks. The course will also discuss many of the recent applications of MMML including multimodal affect recognition, image and video captioning and cross-modal multimedia retrieval.',5,120,'https://cmu-multicomp-lab.github.io/mmml-course/fall2020/schedule/','https://www.youtube.com/playlist?list=PL-Fhd_vrvisNup9YQs_TdLW7DQz-lda0G','https://cmu-multicomp-lab.github.io/mmml-course/fall2020/projects/'),
       (26,'Neural Networks for NLP','Carnegie Mellon University','This class (at Carnegie Mellon University''s Language Technology Institute) will start with a brief overview of neural networks, then spend the majority of the class demonstrating how to apply neural networks to natural language problems. Each section will introduce a particular problem or phenomenon in natural language, describe why it is difficult to model, and demonstrate several models that were designed to tackle this problem. In the process of doing so, the class will cover different techniques that are useful in creating neural network models, including handling variably sized and structured sentences, efficient handling of large data, semi-supervised and unsupervised learning, structured prediction, and multilingual modeling.',5,120,'http://www.phontron.com/class/nn4nlp2021/schedule.html','https://www.youtube.com/playlist?list=PL8PYTP1V4I8CJ7nMxMC8aXv8WqKYwj-aJ','http://www.phontron.com/class/nn4nlp2021/assignments.html'),
       (26,'Advanced NLP','Carnegie Mellon University','Advanced natural language processing is an introductory graduate-level course on natural language processing aimed at students who are interested in doing cutting-edge research in the field. In it, we describe fundamental tasks in natural language processing such as syntactic, semantic, and discourse analysis, as well as methods to solve these tasks. The course focuses on modern methods using neural networks, and covers the basic modeling and learning algorithms required therefore. The class culminates in a project in which students attempt to reimplement and improve upon a research paper in a topic of their choosing.',4,150,'http://phontron.com/class/anlp2022/schedule.html','https://www.youtube.com/playlist?list=PL8PYTP1V4I8D0UkqW2fEhgLrnlDW9QK7z','http://phontron.com/class/anlp2022/assignments.html'),
       (26,'Multilingual NLP','Carnegie Mellon University','Students who take this course should be able to develop linguistically motivated solutions to core and applied NLP tasks for any language. This includes understanding and mitigating the difficulties posed by lack of data in low-resourced languages or language varieties, and the necessity to model particular properties of the language of interest such as complex morphology or syntax. The course will introduce modeling solutions to these issues such as multilingual or cross-lingual methods, linguistically informed NLP models, and methods for effectively bootstrapping systems with limited data or human intervention. The project work will involve building an end-to-end NLP pipeline in a language you don’t know.',5,100,'http://phontron.com/class/multiling2022/schedule.html','https://www.youtube.com/playlist?list=PL8PYTP1V4I8BhCpzfdKKdd1OnTfLcyZr7','http://phontron.com/class/multiling2022/assignments.html'),
       (19,'Practical Unix','Stanford University','Practical Unix is a practical introduction to using the Unix set of operating systems with a focus on Linux command line skills.  The course has videos to introduce some commands and how to use them generally and lab exercises to solidify understanding and go beyond the material in the videos. Much of dealing with the command line involves knowing how to best use Google and manual pages to figure things out, so these lab exercises won''t tell you how to do everything.',1,30,'https://practicalunix.org/video-schedule','https://www.youtube.com/playlist?list=PLAn5BRyzQEf9VoK8gRKp8Z0LGME6fISaE','https://practicalunix.org'),
       (1,'Mathematical Statistics','University of Illinois Urbana-Champaign','Provides a graduate level foundation in fundamental mathematical statistics topics including order statistics, exponential families, sufficiency, Rao-Blackwell theorem, Cramer-Rao lower bound, point estimation, hypothesis testing and interval estimation, likelihood and Bayesian methods, and large-sample asymptotics.',5,60,'https://spring-2021.stat510.org','https://www.youtube.com/playlist?list=PLBgxzZMu3GpPDtC282Q1bBCEKaG7n1Uc_','https://spring-2021.stat510.org'),
       (12,'Principles of Computer Systems','Stanford University','Principles and practice of engineering of computer software and hardware systems. Topics include: techniques for controlling complexity; strong modularity using client-server design, virtual memory, and threads; networks; atomicity and coordination of parallel activities.',4,140,'https://web.stanford.edu/class/archive/cs/cs110/cs110.1196/templates/calendar','https://www.bilibili.com/video/BV1ED4y1R7RJ','https://github.com/xuzheng465/Stanford_CS110'),
       (31,'From Languages to Information','Stanford University','Extracting meaning, information, and structure from human language text, speech, web pages, social networks. Methods include: string algorithms, edit distance, language modeling, the noisy channel, machine learning classifiers, inverted indices, collaborative filtering, neural embeddings, PageRank. Applications such as question answering, sentiment analysis, information retrieval, text classification, social network models, spell checking, recommender systems, chatbots.',4,60,'https://web.stanford.edu/class/cs124/#schedule','https://www.youtube.com/playlist?list=PLaZQkZp6WhWyvdiP49JG-rjyTPck_hvEu','https://web.stanford.edu/class/cs124/#schedule');

insert into prerequisite(pre_id, post_id)
values (1,2),
       (1,3),
       (2,4),
       (4,5),
       (6,8),
       (12,9),
       (15,12),
       (14,15),
       (16,17),
       (17,19),
       (18,20),
       (3,21),
       (21,22),
       (21,23),
       (21,24),
       (3,25),
       (25,26),
       (15,27),
       (12,28),
       (19,29),
       (30,31),
       (12,31),
       (31,32),
       (29,33),
       (35,34),
       (12,35),
       (28,36),
       (29,37),
       (35,38),
       (40,42),
       (36,43),
       (45,43),
       (29,44),
       (28,45),
       (45,46),
       (40,25),
       (29,48),
       (25,49),
       (49,50),
       (16,51),
       (51,52),
       (25,53),
       (52,53),
       (54,55),
       (54,56),
       (17,56),
       (6,56),
       (40,57),
       (16,40),
       (39,13),
       (15,7),
       (12,58),
       (3,58),
       (7,59),
       (15,61),
       (12,62),
       (25,62),
       (28,62),
       (61,62),
       (3,63),
       (3,64),
       (64,65),
       (65,66),
       (64,67),
       (4,68),
       (6,68),
       (64,68),
       (3,69),
       (69,70),
       (70,71),
       (15,72),
       (72,73),
       (63,74),
       (26,75),
       (4,75),
       (3,76),
       (76,77),
       (4,77),
       (40,78),
       (69,79),
       (21,82),
       (20,83),
       (6,83),
       (83,84),
       (2,85),
       (10,85),
       (8,85),
       (2,86),
       (6,86),
       (2,87),
       (10,87),
       (35,87),
       (6,88),
       (26,88),
       (20,88),
       (20,89),
       (2,89),
       (6,89),
       (20,90),
       (16,91),
       (20,92),
       (35,92),
       (35,93),
       (40,47),
       (40,94),
       (94,95),
       (94,96),
       (19,97),
       (6,97),
       (40,99),
       (98,97),
       (98,99),
       (99,100),
       (1,101),
       (4,101),
       (6,101),
       (40,101),
       (1,102),
       (6,102),
       (40,102),
       (99,103),
       (4,104),
       (6,104),
       (40,104),
       (47,105),
       (12,105),
       (47,106),
       (35,106),
       (3,106),
       (110,107),
       (94,108),
       (110,109),
       (40,110),
       (2,110),
       (4,110),
       (6,110),
       (47,111),
       (6,111),
       (4,111),
       (110,112),
       (110,113),
       (115,114),
       (4,115),
       (6,115),
       (47,115),
       (115,116),
       (5,118),
       (35,119),
       (47,120),
       (4,120),
       (40,41),
       (4,54);

SET
foreign_key_checks = 1;